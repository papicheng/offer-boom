/*
有-数列由3和5组成的数，按从小到大排序:
353335 53 55 333 335 353 355 533 535 553555 3333 3335...
对应每个数字序号依次为1,2,3,4,5,67.,8,9,10....编写-个程序，实现输入序号N输出其对应数列中第N个数字。
例如:。1 689-
输入: 7
输出: 333

思路:
[数组]35| 33 3553 55 | 333 335353 355 533 535 553 555| 3333
[序号]1 2|3 4 5 6 | 7 8 9 10 11 12 13 14|15
       2|     4   |  8                  |16
先算出N是所在等比数列第几个，然后计算该值是2的几次方(x)，该x就是位数,
且等比数列区间内数字就是从0~X的二进制排列，根据该=进制位打印出3和5即可
*/
#include<iostream>
using namespace std;
int main()
{
 unsigned long long k;
 while (cin >> k) {
  unsigned long long sum = 0, num = 1;
  unsigned int len = 1;
  //寻找K属于哪个区间范围内
      for (;;++len) {
   num = 1 << len;         ///////1
   sum += num;           ///////2
   if (k <= sum)  break;
  }

  sum -= num;
  k = k - sum - 1;
      //根据K所在的区间范围的偏移量二进制排列输出3，5
      for (unsigned int i = len;i >= 1;--i) {
   if ((k >> i - 1) & 1 == 1)    ///////3
    cout<<'5';         //////4                       
   else
    cout<<'3';         ///////5                      
  }
  cout << endl;
 }
    return 0;
}